package GUIMiddlewareTest

import GUIMiddleware.Grader
import GUIMiddleware.LetterConverter
import GUIMiddleware.Stats
import GUIMiddleware.Student
import GUIMiddleware.StudentCreator
import spock.lang.Specification
import GUIMiddleware.ExamManager

import java.lang.reflect.Method

class ExamManagerTest extends Specification {

    ExamManager em = new ExamManager()

    //addStudentExam is a wrapper for the makeStudent() in StudentCreator
    def "add student exam"() {
        when:
        String[][] first = [['4','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        int before = em.getStudentExams().size()
        em.addStudentExam(first, second)
        int after = em.getStudentExams().size()

        then:
        before == 0
        after == 1

    }

    def "fail add student exam, bad first parameter"() {
        when:
        int first = 42
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        int before = em.getStudentExams().size()
        em.addStudentExam(first, second)
        int after = em.getStudentExams().size()

        then:
        thrown Exception
        before == 0
        after == 0

    }

    def "fail add student exam, bad second parameter"() {
        when:
        String[][] first = [['4','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        boolean second = true
        int before = em.getStudentExams().size()
        em.addStudentExam(first, second)
        int after = em.getStudentExams().size()

        then:
        thrown Exception
        before == 0
        after == 0

    }

    def "successful getExamID"() {
        when:
        String[][] first = [['4','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamID")
        method.setAccessible(true)
        method.invoke(em)
        String id = em.getExamId()

        then:
        id.compareTo("") != 0
        //simply copies a string from a student object into this one
    }

    def "get exam grades"() {
        //adding two exams simply to check multiple inserts into the list
        String[][] first = [['4','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        int before = em.getStudentNumberGrades().size()
        int befor = em.getKey().answers.size()
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        int after = em.getStudentNumberGrades().size()
        int afte = em.getKey().answers.size()

        then:
        before == 0
        befor == 0
        after == 1
        afte == 100
    }

    def "fail getExamGrades from studentExams not being a properly formatted 2-d array of strings"() {
        //adding two exams simply to check multiple inserts into the list
        String[][] first = [['a few strings','to break','this'],['method','in','testing']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        when:
        int before = em.getStudentNumberGrades().size()
        int befor = em.getKey().answers.size()
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        int after = em.getStudentNumberGrades().size()
        int afte = em.getKey().answers.size()

        then:
        thrown Exception
    }

    def "fail getExamGrades from key not being a properly formatted array of strings"() {
        //adding two exams simply to check multiple inserts into the list
        String[][] first =  [['5','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                             ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                             ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                             ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['time to ', 'break']
        em.addStudentExam(first, second)
        when:
        int before = em.getStudentNumberGrades().size()
        int befor = em.getKey().answers.size()
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        int after = em.getStudentNumberGrades().size()
        int afte = em.getKey().answers.size()

        then:
        thrown Exception
    }

    def "successful getExamLetterGrades"() {
        String[][] first = [['1','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("getExamLetterGrades")
        method.setAccessible(true)
        method.invoke(em)
        List<String> grades = em.getStudentLetterGrades()

        then:
        grades.size() == 1
        //should have only 1 grade. Returning 2 so the exam key must be getting counted as well
    }

    def "fail getExamLetterGrades from 2d string array of answers not formatted correctly"() {
        String[][] first = [['String',' test'],['failure','#','csc480','spring','2019']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("getExamLetterGrades")
        method.setAccessible(true)
        method.invoke(em)
        List<String> grades = em.getStudentLetterGrades()

        then:
        thrown Exception
    }

    def "fail getExamLetterGrades from string array of student data not formatted correctly"() {
        String[][] first = [['1','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['strings', 'vfdfgtyhjk', 'iuytrewertyh', '34rfgr4erf;']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("getExamLetterGrades")
        method.setAccessible(true)
        method.invoke(em)
        List<String> grades = em.getStudentLetterGrades()

        then:
        thrown Exception
    }

    def "successful examGradeIntegerConverter"() {
        String[][] first = [['1','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("examGradeIntegerConverter")
        method.setAccessible(true)
        method.invoke(em)
        List<Integer> grades = em.getStudentGradesForStats()

        then:
         grades.size() == 1
        //should have only 1 grade. Returning 2 so the exam key must be getting counted as well

    }

    def "fail examGradeIntegerConverter from 2d string array of answers not formatted correctly"() {
        String[][] first = [['145t6yu][p','3'],['jfhrh','-1','-1','-1','-esd[1'],['4rf1','-1','-1','-1','-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("examGradeIntegerConverter")
        method.setAccessible(true)
        method.invoke(em)
        List<Integer> grades = em.getStudentGradesForStats()

        then:
        thrown Exception

    }

    def "fail examGradeIntegerConverter from string array of student data not formatted correctly"() {
        String[][] first = [['1','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['34r5tght4', 'qwertyuiop', 'asdfghjkl;']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("examGradeIntegerConverter")
        method.setAccessible(true)
        method.invoke(em)
        List<Integer> grades = em.getStudentGradesForStats()

        then:
        thrown Exception

    }

    def "successful assignStudentGrades"() {
        String[][] first = [['1','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("getExamLetterGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("assignStudentGrades")
        method.setAccessible(true)
        method.invoke(em)
        List<Student> students = em.getStudentExams()


        then:
        students.size() == 1
        students.get(0).getLetterGrade() == 'D'
        students.get(0).getExamGrade() == 64.0
        //the key is being graded against itself and is the first in the list, failing this test
    }

    def "fail assignStudentGrades from 2d string array of answers not formatted correctly"() {
        String[][] first = [['-iii1','-df1','-d1','ewsd-1','-1'],['efw-1','gg-1','hbtgr-1','-gtrt1','-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("getExamLetterGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("assignStudentGrades")
        method.setAccessible(true)
        method.invoke(em)
        List<Student> students = em.getStudentExams()


        then:
        thrown Exception

    }

    def "fail assignStudentGrades from string array of student data not formatted correctly"() {
        String[][] first = [['1','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['ttt3', 'rftg', 'stringy', 'strings', 'string']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("getExamLetterGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("assignStudentGrades")
        method.setAccessible(true)
        method.invoke(em)
        List<Student> students = em.getStudentExams()


        then:
        thrown Exception

    }

    def "successful getStats"() {
        String[][] first = [['1','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("examGradeIntegerConverter")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("getStats")
        method.setAccessible(true)
        method.invoke(em)
        Stats stats = em.getstats()

        then:
        //checking to see if the value in stats changed.
        0 != stats.getMax().compareTo("")

    }

    def "fail getStats from 2d string array of answers not formatted correctly"() {
        String[][] first = [['fg-1','-g1','-h1h','-5rt1','-15g'],['```-1','1q-1','@-1','$-1','%-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("examGradeIntegerConverter")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("getStats")
        method.setAccessible(true)
        method.invoke(em)
        Stats stats = em.getstats()

        then:
        thrown Exception

    }

    def "fail getStats from string array of student data not formatted correctly"() {
        String[][] first = [['1','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['1test0', '1bgfb5', '1t4', 'rg4']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        when:
        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getExamGrades")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("examGradeIntegerConverter")
        method.setAccessible(true)
        method.invoke(em)
        method = aClass.getDeclaredMethod("getStats")
        method.setAccessible(true)
        method.invoke(em)
        Stats stats = em.getstats()

        then:
        thrown Exception

    }

    def "successful getGrades"() {
        when:
        String[][] first = [['4','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        int before = em.getStudentNumberGrades().size()
        int befor = em.getKey().answers.size()

        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getGrades")
        method.setAccessible(true)
        method.invoke(em)

        int after = em.getStudentNumberGrades().size()
        int afte = em.getKey().answers.size()
        List<String> grades = em.getStudentLetterGrades()
        List<Integer> grade = em.getStudentGradesForStats()
        String id = em.getExamId()
        List<Student> students = em.getStudentExams()

        //Stats stats = mi.getstats()
        //This line is commented out because the relevant code it would test is currently commented out. Unsure if needed

        then:
        before == 0
        befor == 0
        after == 1
        afte == 100
        grades.size() == 1
        grade.size() == 1
        id.compareTo("") != 0
        students.size() == 1
        students.get(0).getLetterGrade() == 'D'
        students.get(0).getExamGrade() == 64.0

        //0 != stats.getMax().compareTo("")
        //This line is commented out because the relevant code it would test is currently commented out. Unsure if needed
    }

    def "fail getGrades from 2d string array of answers not formatted correctly"() {
        when:
        String[][] first = [['test strings', 'for dayssss'],['it never', 'stops']]
        String[] second = ['10', '15', '14', '4', '14', '0', '20', '18', '25', '14', '9', '19', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        int before = em.getStudentNumberGrades().size()
        int befor = em.getKey().answers.size()

        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getGrades")
        method.setAccessible(true)
        method.invoke(em)

        int after = em.getStudentNumberGrades().size()
        int afte = em.getKey().answers.size()
        List<String> grades = em.getStudentLetterGrades()
        List<Integer> grade = em.getStudentGradesForStats()
        String id = em.getExamId()
        List<Student> students = em.getStudentExams()

        //Stats stats = mi.getstats()
        //This line is commented out because the relevant code it would test is currently commented out. Unsure if needed

        then:
        thrown Exception
    }

    def "fail getGrades from string array of student data not formatted correctly"() {
        when:
        String[][] first = [['4','3','3','3','4'],['1','2','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['0','1','2','3','1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                            ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] second = ['yet', 'another', 'test']
        em.addStudentExam(first, second)
        String[][] firs = [['3','3','0','1','2'],['0','1','0','0','2'],['0','1','2','1','3'],['2','0','3','3','2'],['2','2','2','3','2'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],
                           ['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1'],['-1','-1','-1','-1','-1']]
        String[] secon = ['11', '12', '16', '2', '10', '3', '10', '15', '23', '12', '10', '13', '11', '9', '0', '13', '0', '0', '0', '0', '13', '1', '1', '1', '7', '9', '2', '8', '0', '3', '0', '4', '3', '9', '7', '4', '1', '2', '3', '4', '5', '6', '0']
        em.addStudentExam(firs, secon)
        int before = em.getStudentNumberGrades().size()
        int befor = em.getKey().answers.size()

        Class aClass = em.getClass()
        Method method = aClass.getDeclaredMethod("getGrades")
        method.setAccessible(true)
        method.invoke(em)

        int after = em.getStudentNumberGrades().size()
        int afte = em.getKey().answers.size()
        List<String> grades = em.getStudentLetterGrades()
        List<Integer> grade = em.getStudentGradesForStats()
        String id = em.getExamId()
        List<Student> students = em.getStudentExams()

        //Stats stats = mi.getstats()
        //This line is commented out because the relevant code it would test is currently commented out. Unsure if needed

        then:
        thrown Exception
    }
}
