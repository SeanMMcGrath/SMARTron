{"version":3,"sources":["assets/alert.png","assets/smartron-logo.png","components/Exam.js","components/ExamList.js","components/Header.js","components/Home.js","components/ResultsPage/StudentTable.js","components/ResultsPage/QuestionTable.js","components/ResultsPage/StatsTable.js","components/ResultsPage/Tabs.js","components/ResultsPage/Results.js","components/Login.js","components/AnswerKey.js","components/Router.js","components/App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["module","exports","__webpack_require__","p","Exam","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title1","text","problem","exid","scanCode","newName","console","log","navResults","bind","assertThisInitialized","navAnswerKey","handleName","suppressEnter","resetNewNames","history","push","pathname","id","loginName","exams","list","email","fetch","concat","method","event","setState","target","value","which","preventDefault","_this2","react_default","a","createElement","className","reactjs_popup_es","onClose","modal","trigger","index_es","icon","faPencilAlt","close","onKeyPress","name","onChange","onClick","Fragment","src","alert","height","Component","ExamList","children","Header","google_login","clientId","buttonText","onLogoutSuccess","render","renderProps","faPowerOff","size","Home","exams2","random","newNum","swap","generateCode","handleNum","sort","resetNewTest","location","then","response","json","result","examList","forEach","exam","components_Exam","examName","examCode","tmp","len","length","i","charAt","Math","floor","isNaN","forceUpdate","_this3","onOpen","numQuest","components_ExamList","components_Header","rows","responseJson","students","student","grade","percent","createData","catch","error","withStyles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","classes","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","component","scope","res","questionsList","question","data","q","questionNumber","mean","median","max","min","range","deviation","variance","kr20","kr21","cronbach","TabContainer","_ref","dir","Typography_default","style","padding","data1","statsJSON","gradeDistribution","stat","COLORS","CenteredTabs","handleChange","_React$createElement","_this$props","AppBar_default","position","color","Tabs_default","indicatorColor","textColor","variant","Tab_default","label","lib_default","axis","direction","index","onChangeIndex","dist_default","ResultsPage_StatsTable","ResultsPage_QuestionTable","es6","strokeDasharray","dataKey","defineProperty","entry","fill","ResultsPage_StudentTable","React","backgroundColor","withTheme","Results","paddingLeft","Link","to","textDecoration","ResultsPage_Tabs","container","document","body","appendChild","Login","responseGoogleSucc","getBasicProfile","getEmail","getName","responseGoogleFail","logo","onFailure","onSuccess","AnswerKey","answerKeys","keyOptions","chkbox","copyOfAnswerKey","makeCopy","handleClick","handleSubmit","copyAnswerKey","postAnswerKey","keys","item","dupeAnswerKey","JSON","parse","stringify","answerKey","indexOf","includes","splice","e","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","responseText","open","setRequestHeader","send","questionId","k","type","defaultChecked","htmlFor","Router","BrowserRouter","basename","process","Route","exact","path","App","components_Router","isLocalhost","Boolean","window","hostname","match","register","config","navigator","URL","href","origin","swUrl","contentType","headers","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.37e04eb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.a453f81d.png\";","module.exports = __webpack_public_path__ + \"static/media/smartron-logo.613fdbf0.png\";","import React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport alert from '../assets/alert.png';\nimport '../css/exam.css';\nimport Popup from \"reactjs-popup\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\nclass Exam extends Component{\n    constructor(props) {\n        super()\n        this.state = {\n            title1: props.text,\n            problem: props.problem,\n            exid: props.scanCode,\n            newName:\"\"\n        }\n        console.log(props.problem)\n\n        this.navResults = this.navResults.bind(this);\n        this.navAnswerKey = this.navAnswerKey.bind(this);\n        this.handleName = this.handleName.bind(this);\n        this.suppressEnter = this.suppressEnter.bind(this);\n        this.resetNewNames = this.resetNewNames.bind(this);\n    }\n\n\n\n\n    navResults(){\n        const his = this.props.history\n        // createBrowserHistory().push(\"/results\");\n        this.props.history.push({pathname:\"/results\",state:{id:this.state.exid, text:this.state.title1 ,loginName:this.props.loginName,exams:this.props.list,email:this.props.email}});\n\n        fetch(`http://pi.cs.oswego.edu:13126/result?examID=${this.state.exid}&instID=${this.props.email}`, {\n            method: 'post'\n        })\n    }\n\n    navAnswerKey(){\n      this.props.history.push({pathname:\"/answerKey\",state:{id:this.state.exid,text:this.state.title1, loginName:this.props.loginName,exams:this.props.list,email:this.props.email}});\n    }\n    handleName(event){\n        this.setState({newName: event.target.value});\n\n    }\n    suppressEnter(event){\n        if (event.which === 13) {\n            event.preventDefault();\n        }\n    }\n    resetNewNames(){\n        this.state.newName = \"\"\n        this.setState(this.state)\n    }\n    render() {\n        return(\n            <div>\n                <div className={\"exam\"}>\n\n                    <a className={\"editName\"}>{this.state.title1} </a>\n                    <Popup onClose={this.resetNewNames} modal trigger={<FontAwesomeIcon icon={faPencilAlt}/>}>\n                        {close =>\n                            <div className={\"changeName\"}>\n                                <h1>Change name of test {this.state.title1}</h1>\n                                <form onKeyPress={this.suppressEnter}>\n                                    <label> Enter new name of test: <input name={\"newName\"} value={this.state.newName}\n                                                                           onChange={this.handleName}/></label> <br/>\n                                </form>\n                                <button onClick={()=>{\n                                    fetch(`http://pi.cs.oswego.edu:13126/namechange?id=${this.state.exid}&name=${this.state.newName}`,{\n                                        method: 'post'\n                                    })\n                                    this.resetNewNames()\n                                    close()\n                                }\n                                }>Submit</button>\n\n\n                                <button onClick={()=>{\n                                    this.resetNewNames()\n                                    close()\n\n                                }\n                                }>\n                                Cancel</button>\n\n                            </div>\n\n                        }\n\n                    </Popup>\n\n\n\n                    <>    Scan Code: {this.props.scanCode}</>\n\n                    <button onClick={this.navResults}>View Results</button>\n                    <button onClick={this.navAnswerKey}>Edit Answer Key</button>\n                    {this.props.problem ? <img className={\"alert\"} src={alert} height={25} /> : null}\n\n                </div>\n            </div>\n\n        )\n    }\n\n\n}\nexport default Exam;\n","import React, { Component } from 'react';\nimport Exam from \"./Exam\";\n\nclass ExamList extends Component{\n    constructor(props) {\n        super();\n        this.state ={\n            list:props.exams,\n            loginName:props.loginName,\n            email:props.email\n\n        }\n\n    }\n    render() {\n\n\n        return(\n            <>{this.props.children}</>\n\n        )\n    }\n\n}\nexport default ExamList;\n/*\n*       const children =React.children.map(this.props.children,child =>{\n            return React.cloneElement(child,{\n                list:this.state.list,\n                loginName:this.state.loginName,\n                email:this.state.email\n            });\n        });\n* */","import React, {Component} from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons'\nimport { GoogleLogout } from 'react-google-login';\n\n\nclass Header extends Component{\n    constructor(props) {\n        super();\n\n    }\n\n    render(){\n    return(\n      <header className={\"topBar\"}>\n          <h1 className={\"leftA\"}>SMART</h1><h1 className={\"leftB\"}>RON</h1>\n          <GoogleLogout clientId={\"121480712018-0f6fb2fh7kbms55bno97g3hiju99n8oo.apps.googleusercontent.com\"} buttonText={\"Logout\"} onLogoutSuccess={()=>{this.props.history.push(\"/\")}} render={ renderProps =>(<button className={\"logout\"} onClick={()=>{this.props.history.push(\"/\")}}><FontAwesomeIcon icon={faPowerOff} size={\"lg\"}/></button>)}/>\n          <h1 className={\"right\"}>{this.props.email} </h1>\n\n      </header>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\nimport Exam from \"./Exam\";\nimport ExamList from \"./ExamList\"\nimport Popup from \"reactjs-popup\";\nimport Header from \"./Header\";\n\nclass Home extends Component {\n    //Constructor binds methods and creates an exam list used by the ExamList component\n    constructor(props) {\n        super()\n\n        this.state = {\n            exams:[],\n            exams2:[],\n            random:\"\",\n            newName:\"\",\n            newNum:\"\",\n            swap:false\n        }\n\n        this.generateCode =this.generateCode.bind(this)\n        this.handleName = this.handleName.bind(this)\n        this.handleNum = this.handleNum.bind(this)\n        this.sort = this.sort.bind(this)\n        this.resetNewTest = this.resetNewTest.bind(this)\n\n    }\n    componentDidMount() {\n\n            this.setState(this.state)\n            var ex1 = []\n            var ex2 = []\n            const email = this.props.location.state.email\n            fetch(`http://pi.cs.oswego.edu:13126/exam?em=${email}`)\n                .then(response => response.json())\n                .then(result =>{\n                    result.examList.forEach((exam =>\n                            this.state.exams.push(<Exam problem={false} loginName={this.props.location.state.loginName}  list={[]}\n                                                        email={this.props.location.state.email} text={exam.examName} scanCode={exam.examCode}\n                                                        history={this.props.history}/>)\n\n                    )); this.setState(this.state);\n\n                    var tmp = []\n\n                    console.log(this.state.exams)\n                    var len = this.state.exams.length\n                    console.log(len)\n                    for (let i = (len-1); i >= 0; i--) {\n                        tmp.push(this.state.exams[i])\n                    }\n                    console.log(tmp)\n                    this.state.exams2= tmp\n                    console.log(this.state.exams2)\n                    this.setState(this.state)\n                })\n\n\n    }\n\n\n\n\n\n    generateCode(){\n        var id = \"\"\n        var poss = \"BCDFGHJKLMNPQRSTVWXYZ\"\n        for (let i = 0; i < 5; i++) {\n            id += poss.charAt(Math.floor(Math.random()*20))\n        }\n        this.state.random = id\n        this.setState(this.state)\n    }\n    handleName(event) {\n        if(event.target.value.length<21){\n            this.setState({newName: event.target.value});\n\n        }\n    }\n    handleNum(event) {\n        if(!isNaN(event.target.value)){\n            this.setState({newNum: event.target.value});\n        }\n\n    }\n    sort(){\n        var tmp =\n        this.state.swap = !tmp\n\n\n        this.setState(this.state)\n    }\n    resetNewTest(){\n        this.state.newName = \"\"\n        this.state.newNum = \"\"\n        this.setState(this.state)\n        this.forceUpdate()\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={\"welcome\"}> Welcome, {this.props.location.state.loginName}</h1>\n                <div className={\"buttons\"}>\n                    <Popup  onClose={this.resetNewTest} onOpen={this.generateCode} modal trigger={<button   className={\"scanButton\"}>New Test Scan</button>}>\n                        {close =>\n                            <div className={\"modal\"}>\n                                <a className={\"closeButton\"} onClick={close}> &times; </a>\n                                <h1> New Test Scan</h1>\n                                <form>\n                                    <label> Enter name of test: <input name={\"newName\"} value={this.state.newName}\n                                                                       onChange={this.handleName}/></label> <br/>\n                                    <label> Enter number of questions: <input name={\"newNum\"} value={this.state.newNum}\n                                                                              onChange={this.handleNum}/></label>\n                                </form>\n\n                                <Popup onOpen={this.generateCode} modal trigger={<button>Submit</button>}>\n                                    <h1 className={\"id\"}>{this.state.random}</h1>\n                                    <p className={\"scanCode\"}>Scan Code</p>\n                                    <p>\n\n                                        1. Enter this code in the NAME FIELD of the ANSWER KEY scantron <br/>\n\n                                        2. Only enter 25 SCANTRONS in the scanner at a time <br/>\n                                        3. Place ANSWER KEY scantron on the TOP of each pile of answer sheets <br/>\n                                        4. Students MUST fill out the ID FIELD on their Scantron Sheets\n\n                                    </p>\n                                    <button onClick={() => {\n                                        fetch(`http://pi.cs.oswego.edu:13126/exam?email=${this.props.location.state.email}&id=${this.state.random}&name=${this.state.newName}`,{\n                                            method: 'post'\n                                        })\n                                        this.state.exams.push(<Exam problem={false} loginName={this.props.location.state.loginName} scanCode={this.state.random} email={this.props.location.state.email} list={[]} text={this.state.newName} id={this.state.random} numQuest={this.state.newNum} history={this.props.history}/>); this.setState(this.state)\n                                        this.resetNewTest()\n                                        close()\n                                    }}>Ok\n                                    </button>\n                                </Popup>\n                            </div>\n                        }\n                    </Popup>\n                    <select className={\"select\"} onChange={this.sort}><option value={\"recent\"}>Newest First </option> <option value={\"alpha\"}>Oldest First</option></select>\n                </div>\n              <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams2} history={this.props.history}>{this.state.swap ? this.state.exams2 : this.state.exams}</ExamList>\n                <Header history={this.props.history} email={this.props.location.state.email}/>\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n/*ex2.sort(function(a,b){\n                console.log(\"hey\")\n                if(a.loginName>b.loginName){\n                    console.log(a.loginName + \"> \" + b.loginName)\n                    return 1\n                }else if(a.loginName<b.loginName){\n                    console.log(a.loginName + \"< \" + b.loginName)\n                    return -1\n                }else{\n                    console.log(a.loginName + \"== \" + b.loginName)\n                    return 0\n                }\n            })*/\n\n/* {this.state.swap ? <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams2} history={this.props.history}>{this.state.exams2}</ExamList> : <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams} history={this.props.history}>{this.state.exams}</ExamList>}\n*/","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n    root: {\n        width: '80%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 500,\n    },\n});\n\nlet id = 0;\nfunction createData(student, grade, percent) {\n    id += 1;\n    return { student, grade, percent };\n}\n\nconst rows = [];\n\n// studentJSON.students.forEach((student) => {\n//     rows.push(createData(student.name, student.grade, student.points, student.percent));\n// });\n\n\nfetch('http://pi.cs.oswego.edu:13126/students')\n    .then((response) => response.json())\n    .then((responseJson) => {\n        responseJson.students.forEach((student) => {\n            rows.push(createData(student.name, student.grade, student.percent));\n        })\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n\nfunction StudentTable(props) {\n\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Student</TableCell>\n                        <TableCell align=\"center\">Grade</TableCell>\n                        <TableCell align=\"center\">Percent %</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.student}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.grade}</TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nStudentTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StudentTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport questionJSON from '../../JSON/Byquestion';\n\nconst styles = theme => ({\n    root: {\n        width: '40%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 100,\n    },\n});\n\nlet id = 0;\nfunction createData(questionNumber, name, value) {\n    id += 1;\n    return { questionNumber, name, value };\n}\n\nconst rows = [];\n\n// questionJSON.questionlist.forEach((question) => {\n//     question.data.forEach((q) => {\n//         rows.push(createData(question.questionNumber, q.name, q.value));\n//     });\n// });\n\nfetch('http://pi.cs.oswego.edu:13126/questions')\n    .then((res) => res.json())\n    .then((responseJson) => {\n        responseJson.questionsList.forEach((question) => {\n            question.data.forEach((q) => {\n                rows.push(createData(question.questionNumber, q.name, q.value));\n            });\n        });\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n\nfunction QuestionTable(props) {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Question Number</TableCell>\n                        <TableCell >Response</TableCell>\n                        <TableCell >Frequency</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.questionNumber}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.name}</TableCell>\n                            <TableCell align=\"center\">{row.value}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nQuestionTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(QuestionTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n    root: {\n        width: '80%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 500,\n    },\n});\n\nlet id = 0;\nfunction createData(mean, median, max, min, range, deviation, variance, kr20, kr21, cronbach) {\n    id += 1;\n    return { mean, median, max, min, range, deviation, variance, kr20, kr21, cronbach };\n}\n\nconst rows = [];\n\n// statsJSON.gradeDistribution.forEach((stat) => {\n//     data.push(createData(stat.grade, stat.percent));\n// });\n\nfetch('http://pi.cs.oswego.edu:13126/statistics')\n    .then((res) => res.json())\n    .then((responseJson) => {\n        rows.push(createData(responseJson.mean, responseJson.median, responseJson.max, responseJson.min, responseJson.range, \n            responseJson.deviation, responseJson.variance, responseJson.kr20, responseJson.kr21, responseJson.cronbach));\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n\nfunction StatsTable(props) {\n\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Mean</TableCell>\n                        <TableCell align=\"center\">Median</TableCell>\n                        <TableCell align=\"center\">Max</TableCell>\n                        <TableCell align=\"center\">Min</TableCell>\n                        <TableCell align=\"center\">Range</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.mean}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.median}</TableCell>\n                            <TableCell align=\"center\">{row.max}</TableCell>\n                            <TableCell align=\"center\">{row.min}</TableCell>\n                            <TableCell align=\"center\">{row.range}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Standard Deviation</TableCell>\n                        <TableCell align=\"center\">Variance</TableCell>\n                        <TableCell align=\"center\">Kuder-Richardson-20</TableCell>\n                        <TableCell align=\"center\">Kuder-Richardson-21</TableCell>\n                        <TableCell align=\"center\">Cronbach</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.deviation}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.variance}</TableCell>\n                            <TableCell align=\"center\">{row.kr20}</TableCell>\n                            <TableCell align=\"center\">{row.kr21}</TableCell>\n                            <TableCell align=\"center\">{row.cronbach}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nStatsTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StatsTable);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport { Cell, BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from \"recharts\";\nimport StudentTable from './StudentTable';\nimport Center from 'react-center';\nimport QuestionTable from \"./QuestionTable\";\nimport statsJSON from '../../JSON/Statistics';\nimport StatsTable from './StatsTable';\n\nfunction TabContainer({ children, dir }) {\n    return (\n        <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n            {children}\n        </Typography>\n    );\n}\n\nconst data = [\n    { \"name\": \"A\", \"value\": 10 },\n    { \"name\": \"B\", \"value\": 20 },\n    { \"name\": \"C\", \"value\": 5 },\n    { \"name\": \"D\", \"value\": 2 },\n    { \"name\": \"E\", \"value\": 1 }\n];\n\nlet id = 0;\nfunction createData(grade, percent) {\n    id += 1;\n    return { grade, percent };\n}\n\nconst data1 = [];\n\nstatsJSON.gradeDistribution.forEach((stat) => {\n    data1.push(createData(stat.grade, stat.percent));\n});\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: '#fff',\n        width: 1000,\n    },\n});\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#E6E6FA'];\n\nclass CenteredTabs extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { classes, theme } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"#fff\">\n                    <Tabs\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"Statistics Report\" />\n                        <Tab label=\"By Question\" />\n                        <Tab label=\"By Student\" />\n                    </Tabs>\n                </AppBar>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={this.state.value}\n                    onChangeIndex={this.handleChange}\n                >\n                    <TabContainer dir={theme.direction}>\n                        <Center><StatsTable /></Center>\n                        <p> </p>\n                        <Center>\n                            {/* <BarChart width={700} height={200} data={data1}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"grade\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar data={data1} dataKey=\"grade\" dataKey=\"percent\" fill=\"#000000\">\n                                    {\n                                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                                    }\n                                </Bar>\n                            </BarChart> */}\n                        </Center>\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        <Center>\n                            <QuestionTable />\n                            <BarChart width={400} height={200} data={data1}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"grade\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar data={data1} dataKey=\"grade\" dataKey=\"percent\" fill=\"#000000\">\n                                    {\n                                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                                    }\n                                </Bar>\n                            </BarChart>\n                        </Center>\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        <Center><StudentTable /></Center>\n                    </TabContainer>\n                </SwipeableViews>\n            </div>\n        );\n    }\n}\n\nCenteredTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CenteredTabs);\n","import React, { Component } from 'react';\nimport '../../css/App.css';\nimport'../../css/styles.css';\nimport {Link} from \"react-router-dom\";\nimport Tabs from './Tabs';\nimport Center from 'react-center';\nimport Header from \"../Header\";\n\nclass Results extends Component {\n    constructor(props){\n        super()\n    }\n\n    render() {\n        return (\n            <div>\n\n                <h1 style={{ color: '#00ccbc', paddingLeft: '50px' }}>Results</h1>\n                <Link to={{pathname: '/home',state:{loginName:this.props.location.state.loginName,email:this.props.location.state.email}}} style={{ textDecoration: 'none', color: '#003C60'}}>&lt;Back to Dashboard</Link>\n\n                <p style={{ color: '#00ccbc', paddingLeft: '50px' }}>{this.props.location.state.text}</p>\n                <Center><Tabs /></Center>\n                <Header history={this.props.history} email={this.props.location.state.email}/>\n\n            </div>\n\n        );\n    }\n}\n\nconst container = document.createElement('div');\ndocument.body.appendChild(container);\n\nexport default Results;\n\n/*\n* */","import React, { Component } from 'react';\nimport logo from '../assets/smartron-logo.png';\nimport '../css/App.css';\nimport {GoogleLogin} from \"react-google-login\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    responseGoogleSucc = (response) => {\n        console.log(response.getBasicProfile().getEmail())\n        this.props.history.push({pathname:\"/home\", state:{loginName:response.getBasicProfile().getName(), email:response.getBasicProfile().getEmail(),exams:[]}});\n    }\n\n    responseGoogleFail = (response) => {\n        console.log(\"Error Signing in\")\n    }\n\n    render() {\n        return (\n            <div className={\"loginButton\"}>\n                <img src={logo} height={400}/>\n                <p>Welcome to SMARTron, please login with your LakerNet account</p>\n                <GoogleLogin\n                    clientId=\"121480712018-0f6fb2fh7kbms55bno97g3hiju99n8oo.apps.googleusercontent.com\"\n                    buttonText=\"Login with your LakerNet ID\"\n                    onFailure={this.responseGoogleFail}\n                    onSuccess={this.responseGoogleSucc}\n                    className={\"button\"}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport '../css/answerkey.css';\nimport Header from '../components/Header';\n\nclass AnswerKey extends Component{\nconstructor(){\n  super();\n  this.state = {\n    answerKeys: [],\n    keyOptions: [\"A\", \"B\", \"C\", \"D\", \"E\"],\n    chkbox: false,\n    copyOfAnswerKey: [],\n    makeCopy: true,\n    examList:[],\n    loginName:\"\",\n    email:\"\"\n  };\n  this.handleClick = this.handleClick.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.copyAnswerKey = this.copyAnswerKey.bind(this);\n  this.postAnswerKey = this.postAnswerKey.bind(this);\n}\n\ncomponentDidMount(){\n  fetch(`http://pi.cs.oswego.edu:13126/answerkey?examId=${this.props.location.state.id}&instId=${this.props.location.state.email}`)\n  .then(response => response.json())\n  .then(result => {\n    const keys = result.map(item => {\n      return item;\n    })\n    this.setState({\n      answerKeys: keys\n    })\n  });\n}\n\ncopyAnswerKey(){\n  let dupeAnswerKey = JSON.parse(JSON.stringify(this.state.answerKeys));\n  this.setState({\n    makeCopy:false,\n    copyOfAnswerKey:dupeAnswerKey\n  });\n}\n\nhandleClick(item, index){\n  var i = item.answerKey.indexOf(index);\n  if(item.answerKey.includes(index)){\n    item.answerKey.splice(i,1);\n  }else{\n    item.answerKey.push(index);\n}\n}\n\nhandleSubmit(e){\n  this.props.history.push({pathname:\"/home\", state:{loginName:this.props.location.state.loginName, email:this.props.location.state.email,exams:this.props.location.state.exams}});\n  console.log(\"handle on submit here\")\n  console.log(this.state.copyOfAnswerKey);\n  this.postAnswerKey();\n}\n\npostAnswerKey(){\nvar data = JSON.stringify(this.state.answerKeys);\nconsole.log(data);\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = false;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === 4) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", `http://pi.cs.oswego.edu:13126/answerkey?examId=${this.props.location.state.id}`);\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.send(data);\n}\n\n  render(){\n    return (\n      <div>\n        <div>\n        </div>\n      <div align = \"right\">\n          <h1 className = \"answerKeyTitle\" align = \"center\">Answer Key</h1>\n          <h1 className = \"examName\" align = \"center\">{this.props.location.state.text}</h1>\n            <div className = \"items\">\n              {this.state.answerKeys.map( item => (\n                <div align = \"center\" className ={item.answerKey.length !== 0? \"item\": \"itemEmpty\"}>\n                  <div key ={item.questionId}>\n                    <div className=\"keyBox\">\n                      <span className=\"questionId\">\n                        {item.questionId}\n                      </span>\n                        {this.state.keyOptions.map(k =>(\n                          <span>\n                            <input\n                              type=\"checkbox\"\n                              value={item.questionId}\n                              id ={item.questionId+k}\n                              name=\"\"\n                              defaultChecked={item.answerKey.includes(k) ? true : false}\n                              onClick={() => this.handleClick(item, k)}/>\n                              <label htmlFor={item.questionId+k}>{k}</label>\n                            </span>\n                          ))}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n              <button className= \"float\"\n                     onClick={() => this.handleSubmit()}>Submit</button>\n          <button className= \"float2\"\n                  onClick={() => this.props.history.push({pathname:'/home',state:{loginName:this.props.location.state.loginName,email:this.props.location.state.email}})}>Return Home</button>\n            </div>\n          <Header history={this.props.history} email={this.props.location.state.email}/>\n\n      </div>\n\n          );\n        }\n}\nexport default AnswerKey\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from './Home';\nimport Results from \"./ResultsPage/Results\";\nimport Login from \"./Login\";\nimport AnswerKey from \"./AnswerKey\";\n\nclass Router extends Component {\n    render() {\n        return (\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <div style={{ height: \"100%\" }}>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path=\"/home\" component={Home} />\n                    <Route exact path=\"/results\" component={Results} />\n                    <Route exact path=\"/answerKey\" component={AnswerKey}/>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default Router;\n","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Router from '../components/Router'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loginName:\"hey\"\n        }\n    }\n\n\n    render() {\n        return (\n            <Router/>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}