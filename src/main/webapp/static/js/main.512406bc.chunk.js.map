{"version":3,"sources":["assets/alert.png","assets/smartron-logo.png","components/Exam.js","components/ExamList.js","components/Header.js","components/Home.js","components/ResultsPage/StudentTable.js","components/ResultsPage/QuestionTable.js","components/ResultsPage/StatsTable.js","components/ResultsPage/Tabs.js","components/ResultsPage/Results.js","components/Login.js","components/AnswerKey.js","components/Router.js","components/App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["module","exports","__webpack_require__","p","Exam","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title1","text","problem","exid","scanCode","newName","console","log","navResults","bind","assertThisInitialized","navAnswerKey","handleName","suppressEnter","resetNewNames","history","push","pathname","fetch","concat","email","method","id","loginName","exams","list","event","setState","target","value","which","preventDefault","_this2","react_default","a","createElement","className","reactjs_popup_es","onClose","modal","trigger","index_es","icon","faPencilAlt","close","onKeyPress","name","onChange","onClick","Fragment","src","alert","height","Component","ExamList","children","Header","google_login","clientId","buttonText","onLogoutSuccess","render","renderProps","faPowerOff","size","Home","exams2","random","newNum","swap","generateCode","handleNum","sort","resetNewTest","location","length","ex2","then","response","json","result","examList","forEach","exam","components_Exam","examName","examCode","reverse","i","charAt","Math","floor","tmp","_this3","onOpen","numQuest","components_ExamList","components_Header","rows","responseJson","students","student","grade","percent","createData","catch","error","withStyles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","classes","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","component","scope","res","questionsList","question","data","q","questionNumber","statsJSON","gradeDistribution","stat","TabContainer","_ref","dir","Typography_default","style","padding","data1","COLORS","CenteredTabs","handleChange","_React$createElement","_React$createElement2","_this$props","AppBar_default","position","color","Tabs_default","indicatorColor","textColor","variant","Tab_default","label","lib_default","axis","direction","index","onChangeIndex","dist_default","ResultsPage_StatsTable","es6","strokeDasharray","dataKey","defineProperty","entry","fill","ResultsPage_QuestionTable","ResultsPage_StudentTable","React","backgroundColor","withTheme","Results","paddingLeft","ResultsPage_Tabs","container","document","body","appendChild","Login","responseGoogleSucc","getBasicProfile","getEmail","getName","responseGoogleFail","logo","onFailure","onSuccess","AnswerKey","answerKeys","keyOptions","chkbox","copyOfAnswerKey","makeCopy","handleClick","handleSubmit","copyAnswerKey","postAnswerKey","keys","item","dupeAnswerKey","JSON","parse","stringify","answerKey","indexOf","includes","splice","e","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","responseText","open","setRequestHeader","send","questionId","k","type","defaultChecked","htmlFor","Router","BrowserRouter","basename","process","Route","exact","path","App","components_Router","isLocalhost","Boolean","window","hostname","match","register","config","navigator","URL","href","origin","swUrl","contentType","headers","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.512406bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.a453f81d.png\";","module.exports = __webpack_public_path__ + \"static/media/smartron-logo.613fdbf0.png\";","import React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport alert from '../assets/alert.png';\nimport '../css/exam.css';\nimport Popup from \"reactjs-popup\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\nclass Exam extends Component {\n    constructor(props) {\n        super()\n        this.state = {\n            title1: props.text,\n            problem: props.problem,\n            exid: props.scanCode,\n            newName: \"\"\n        }\n        console.log(props.problem)\n\n        this.navResults = this.navResults.bind(this);\n        this.navAnswerKey = this.navAnswerKey.bind(this);\n        this.handleName = this.handleName.bind(this);\n        this.suppressEnter = this.suppressEnter.bind(this);\n        this.resetNewNames = this.resetNewNames.bind(this);\n    }\n\n\n\n\n    navResults() {\n        //createBrowserHistory().push(\"/results\");\n        //this.props.history.push({pathname:\"/results\",state:{id:this.state.exid, text:this.state.title1 ,loginName:this.props.loginName,exams:this.props.list,email:this.props.email}});\n\n        this.props.history.push({pathname:\"/results\"});\n\n        fetch(`http://pi.cs.oswego.edu:13126/result?examID=${this.state.exid}&instID=${this.props.email}`, {\n            method: 'post'\n        })\n    }\n\n    navAnswerKey() {\n        this.props.history.push({ pathname: \"/answerKey\", state: { id: this.state.exid, text: this.state.title1, loginName: this.props.loginName, exams: this.props.list, email: this.props.email } });\n    }\n    handleName(event) {\n        this.setState({ newName: event.target.value });\n\n    }\n    suppressEnter(event) {\n        if (event.which === 13) {\n            event.preventDefault();\n        }\n    }\n    resetNewNames() {\n        this.state.newName = \"\"\n        this.setState(this.state)\n    }\n    render() {\n        return (\n            <div>\n                <div className={\"exam\"}>\n\n                    <a className={\"editName\"}>{this.state.title1} </a>\n                    <Popup onClose={this.resetNewNames} modal trigger={<FontAwesomeIcon icon={faPencilAlt} />}>\n                        {close =>\n                            <div className={\"changeName\"}>\n                                <h1>Change name of test {this.state.title1}</h1>\n                                <form onKeyPress={this.suppressEnter}>\n                                    <label> Enter new name of test: <input name={\"newName\"} value={this.state.newName}\n                                        onChange={this.handleName} /></label> <br />\n                                </form>\n                                <button onClick={() => {\n                                    fetch(`http://pi.cs.oswego.edu:13126/namechange?id=${this.state.exid}&name=${this.state.newName}`, {\n                                        method: 'post'\n                                    })\n                                    this.resetNewNames()\n                                    close()\n                                }\n                                }>Submit</button>\n\n\n                                <button onClick={() => {\n                                    this.resetNewNames()\n                                    close()\n\n                                }\n                                }>\n                                    Cancel</button>\n\n                            </div>\n\n                        }\n\n                    </Popup>\n\n\n\n                    <>    Scan Code: {this.props.scanCode}</>\n\n                    <button onClick={this.navResults}>View Results</button>\n                    <button onClick={this.navAnswerKey}>Edit Answer Key</button>\n                    {this.props.problem ? <img className={\"alert\"} src={alert} height={25} /> : null}\n\n                </div>\n            </div>\n\n        )\n    }\n\n\n}\nexport default Exam;\n","import React, { Component } from 'react';\nimport Exam from \"./Exam\";\n\nclass ExamList extends Component{\n    constructor(props) {\n        super();\n        this.state ={\n            list:props.exams,\n            loginName:props.loginName,\n            email:props.email\n\n        }\n\n    }\n    render() {\n\n\n        return(\n            <>{this.props.children}</>\n\n        )\n    }\n\n}\nexport default ExamList;\n/*\n*       const children =React.children.map(this.props.children,child =>{\n            return React.cloneElement(child,{\n                list:this.state.list,\n                loginName:this.state.loginName,\n                email:this.state.email\n            });\n        });\n* */","import React, {Component} from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons'\nimport { GoogleLogout } from 'react-google-login';\n\n\nclass Header extends Component{\n    constructor(props) {\n        super(props);\n\n    }\n\n    render(){\n    return(\n      <header className={\"topBar\"}>\n          <h1 className={\"leftA\"}>SMART</h1><h1 className={\"leftB\"}>RON</h1>\n          <GoogleLogout clientId={\"121480712018-0f6fb2fh7kbms55bno97g3hiju99n8oo.apps.googleusercontent.com\"} buttonText={\"Logout\"} onLogoutSuccess={()=>{this.props.history.push(\"/\")}} render={ renderProps =>(<button className={\"logout\"} onClick={()=>{this.props.history.push(\"/\")}}><FontAwesomeIcon icon={faPowerOff} size={\"lg\"}/></button>)}/>\n          <h1 className={\"right\"}>{this.props.email} </h1>\n\n      </header>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\nimport Exam from \"./Exam\";\nimport ExamList from \"./ExamList\"\nimport Popup from \"reactjs-popup\";\nimport Header from \"./Header\";\n\nclass Home extends Component {\n    //Constructor binds methods and creates an exam list used by the ExamList component\n    constructor(props) {\n        super()\n\n        this.state = {\n            exams:[],\n            exams2:[],\n            random:\"\",\n            newName:\"\",\n            newNum:\"\",\n            swap:false\n        }\n\n        this.generateCode =this.generateCode.bind(this)\n        this.handleName = this.handleName.bind(this)\n        this.handleNum = this.handleNum.bind(this)\n        this.sort = this.sort.bind(this)\n        this.resetNewTest = this.resetNewTest.bind(this)\n\n    }\n    componentDidMount() {\n        if(this.props.location.state.exams.length>0){\n            this.state.exams = this.props.location.state.exams\n            this.setState(this.state)\n        }else {\n\n            this.setState(this.state)\n            var ex1 = []\n            var ex2 = []\n            const email = this.props.location.state.email\n            console.log(`pi.cs.oswego.edu:13126/exam?em=${email}`)\n            fetch(`http://pi.cs.oswego.edu:13126/exam?em=${email}`)\n                .then(response => response.json())\n                .then(result =>{\n                    result.examList.forEach((exam =>\n                            this.state.exams.push(<Exam problem={false} loginName={this.props.location.state.loginName}  list={[]}\n                                                        email={this.props.location.state.email} text={exam.examName} scanCode={exam.examCode}\n                                                        history={this.props.history}/>)\n\n                    )); this.setState(this.state)\n                })\n            console.log(this.state.exams)\n\n            this.state.exams = ex2\n            this.state.exams2= ex2.reverse()\n                this.setState(this.state)\n        }\n    }\n\n\n\n\n\n    generateCode(){\n        var id = \"\"\n        var poss = \"BCDFGHJKLMNPQRSTVWXYZ\"\n        for (let i = 0; i < 5; i++) {\n            id += poss.charAt(Math.floor(Math.random()*20))\n        }\n        this.state.random = id\n        this.setState(this.state)\n    }\n    handleName(event) {\n        this.setState({newName: event.target.value});\n    }\n    handleNum(event) {\n        this.setState({newNum: event.target.value});\n    }\n    sort(){\n        var tmp = this.state.swap\n        this.state.swap = !tmp\n        this.setState(this.state)\n    }\n    resetNewTest(){\n        this.state.newName = \"\"\n        this.state.newNum = \"\"\n        this.setState(this.state)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={\"welcome\"}> Welcome, {this.props.location.state.loginName}</h1>\n                <div className={\"buttons\"}>\n                    <Popup  onClose={this.resetNewTest} onOpen={this.generateCode} modal trigger={<button   className={\"scanButton\"}>New Test Scan</button>}>\n                        {close =>\n                            <div className={\"modal\"}>\n\n                                <h1> New Test Scan</h1>\n                                <form>\n                                    <label> Enter name of test: <input name={\"newName\"} value={this.state.newName}\n                                                                       onChange={this.handleName}/></label> <br/>\n                                    <label> Enter number of questions: <input name={\"newNum\"} value={this.state.newNum}\n                                                                              onChange={this.handleNum}/></label>\n                                </form>\n\n                                <Popup onOpen={this.generateCode} modal trigger={<button>Submit</button>}>\n                                    <h1 className={\"id\"}>{this.state.random}</h1>\n                                    <p className={\"scanCode\"}>Scan Code</p>\n                                    <p>\n\n                                        1. Enter this code in the NAME FIELD of the ANSWER KEY scantron <br/>\n\n                                        2. Only enter 25 SCANTRONS in the scanner at a time <br/>\n                                        3. Place ANSWER KEY scantron on the TOP of each pile of answer sheets <br/>\n                                        4. Students MUST fill out the ID FIELD on their Scantron Sheets\n\n                                    </p>\n                                    <button onClick={() => {\n                                        fetch(`http://pi.cs.oswego.edu:13126/exam?email=${this.props.location.state.email}&id=${this.state.random}&name=${this.state.newName}`,{\n                                            method: 'post'\n                                        })\n                                        this.state.exams.push(<Exam problem={false} loginName={this.props.location.state.loginName} scanCode={this.state.random} email={this.props.location.state.email} list={[]} text={this.state.newName} id={this.state.random} numQuest={this.state.newNum} history={this.props.history}/>); this.setState(this.state)\n                                        this.resetNewTest()\n                                        close()\n                                    }}>Ok\n                                    </button>\n                                </Popup>\n                            </div>\n                        }\n                    </Popup>\n                    <select className={\"select\"} onChange={this.sort}><option value={\"recent\"}>Most Recent </option> <option value={\"alpha\"}>Alphanumeric</option></select>\n                </div>\n                {this.state.swap ? <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams} history={this.props.history}>{this.state.exams}</ExamList> : <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams} history={this.props.history}>{this.state.exams2}</ExamList>}\n\n                <Header history={this.props.history} email={this.props.location.state.email}/>\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport studentJSON from '../../JSON/Bystudent';\n\nconst styles = theme => ({\n    root: {\n        width: '80%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 500,\n    },\n});\n\nlet id = 0;\nfunction createData(student, grade, percent) {\n    id += 1;\n    return { student, grade, percent };\n}\n\nconst rows = [];\n\n// studentJSON.students.forEach((student) => {\n//     rows.push(createData(student.name, student.grade, student.points, student.percent));\n// });\n\n\nfetch('http://pi.cs.oswego.edu:13126/students')\n    .then((response) => response.json())\n    .then((responseJson) => {\n        responseJson.students.forEach((student) => {\n            rows.push(createData(student.name, student.grade, student.percent));\n        })\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n\nfunction StudentTable(props) {\n\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Student</TableCell>\n                        <TableCell align=\"center\">Grade</TableCell>\n                        <TableCell align=\"center\">Percent %</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.student}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.grade}</TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nStudentTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StudentTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport questionJSON from '../../JSON/Byquestion';\n\nconst styles = theme => ({\n    root: {\n        width: '40%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 100,\n    },\n});\n\nlet id = 0;\nfunction createData(questionNumber, name, value) {\n    id += 1;\n    return { questionNumber, name, value };\n}\n\nconst rows = [];\n\n// questionJSON.questionlist.forEach((question) => {\n//     question.data.forEach((q) => {\n//         rows.push(createData(question.questionNumber, q.name, q.value));\n//     });\n// });\n\nfetch('http://pi.cs.oswego.edu:13126/questions')\n    .then((res) => res.json())\n    .then((responseJson) => {\n        responseJson.questionsList.forEach((question) => {\n            question.data.forEach((q) => {\n                rows.push(createData(question.questionNumber, q.name, q.value));\n            });\n        });\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n\nfunction QuestionTable(props) {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Question Number</TableCell>\n                        <TableCell >Response</TableCell>\n                        <TableCell >Frequency</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.questionNumber}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.name}</TableCell>\n                            <TableCell align=\"center\">{row.value}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nQuestionTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(QuestionTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport statsJSON from '../../JSON/Statistics';\n\nconst styles = theme => ({\n    root: {\n        width: '50%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 100,\n    },\n});\n\nlet id = 0;\nfunction createData(grade, percent) {\n    id += 1;\n    return { grade, percent };\n}\n\nconst data = [];\n\nstatsJSON.gradeDistribution.forEach((stat) => {\n    data.push(createData(stat.grade, stat.percent));\n});\n\nfunction StatsTable(props) {\n\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Grade</TableCell>\n                        <TableCell align=\"center\">Percent Score</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.grade}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nStatsTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StatsTable);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport { Cell, BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from \"recharts\";\nimport StudentTable from './StudentTable';\nimport Center from 'react-center';\nimport QuestionTable from \"./QuestionTable\";\nimport statsJSON from '../../JSON/Statistics';\nimport StatsTable from './StatsTable';\n\nfunction TabContainer({ children, dir }) {\n    return (\n        <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n            {children}\n        </Typography>\n    );\n}\n\nconst data = [\n    { \"name\": \"A\", \"value\": 10 },\n    { \"name\": \"B\", \"value\": 20 },\n    { \"name\": \"C\", \"value\": 5 },\n    { \"name\": \"D\", \"value\": 2 },\n    { \"name\": \"E\", \"value\": 1 }\n];\n\nlet id = 0;\nfunction createData(grade, percent) {\n    id += 1;\n    return { grade, percent };\n}\n\nconst data1 = [];\n\nstatsJSON.gradeDistribution.forEach((stat) => {\n    data1.push(createData(stat.grade, stat.percent));\n});\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: '#fff',\n        width: 1000,\n    },\n});\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#E6E6FA'];\n\nclass CenteredTabs extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { classes, theme } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"#fff\">\n                    <Tabs\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"Statistics Report\" />\n                        <Tab label=\"By Question\" />\n                        <Tab label=\"By Student\" />\n                    </Tabs>\n                </AppBar>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={this.state.value}\n                    onChangeIndex={this.handleChange}\n                >\n                    <TabContainer dir={theme.direction}>\n                        <Center><StatsTable /></Center>\n                        <p> </p>\n                        <Center>\n                            <BarChart width={700} height={200} data={data1}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"grade\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar data={data1} dataKey=\"grade\" dataKey=\"percent\" fill=\"#000000\">\n                                    {\n                                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                                    }\n                                </Bar>\n                            </BarChart>\n                        </Center>\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        <Center>\n                            <QuestionTable />\n                            <BarChart width={400} height={200} data={data1}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"grade\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar data={data1} dataKey=\"grade\" dataKey=\"percent\" fill=\"#000000\">\n                                    {\n                                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                                    }\n                                </Bar>\n                            </BarChart>\n                        </Center>\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        <Center><StudentTable /></Center>\n                    </TabContainer>\n                </SwipeableViews>\n            </div>\n        );\n    }\n}\n\nCenteredTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CenteredTabs);\n","import React, { Component } from 'react';\nimport '../../css/App.css';\nimport'../../css/styles.css';\n//import {Link} from \"react-router-dom\";\nimport Tabs from './Tabs';\nimport Center from 'react-center';\nimport Header from \"../Header\";\n\nclass Results extends Component {\n\n    render() {\n        return (\n            <div>\n                <Header email={this.props.location.state.email}/>\n                <h1 style={{ color: '#00ccbc', paddingLeft: '50px' }}>Results</h1>\n                <p style={{ color: '#00ccbc', paddingLeft: '50px' }}>{this.props.location.state.text}</p>\n                <Center><Tabs /></Center>\n            </div>\n\n        );\n    }\n}\n\nconst container = document.createElement('div');\ndocument.body.appendChild(container);\n\nexport default Results;\n\n/*\n        <Link to={'/home'} style={{ textDecoration: 'none', color: '#003C60'}}>&lt;Back to Dashboard</Link>\n* */","import React, { Component } from 'react';\nimport logo from '../assets/smartron-logo.png';\nimport '../css/App.css';\nimport {GoogleLogin} from \"react-google-login\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    responseGoogleSucc = (response) => {\n        console.log(response.getBasicProfile().getEmail())\n        this.props.history.push({pathname:\"/home\", state:{loginName:response.getBasicProfile().getName(), email:response.getBasicProfile().getEmail(),exams:[]}});\n    }\n\n    responseGoogleFail = (response) => {\n        console.log(\"Error Signing in\")\n    }\n\n    render() {\n        return (\n            <div className={\"loginButton\"}>\n                <img src={logo} height={400}/>\n                <p>Welcome to SMARTron, please login with your LakerNet account</p>\n                <GoogleLogin\n                    clientId=\"121480712018-0f6fb2fh7kbms55bno97g3hiju99n8oo.apps.googleusercontent.com\"\n                    buttonText=\"Login with your LakerNet ID\"\n                    onFailure={this.responseGoogleFail}\n                    onSuccess={this.responseGoogleSucc}\n                    className={\"button\"}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport '../css/answerkey.css';\nimport Header from '../components/Header';\nclass AnswerKey extends Component{\nconstructor(){\n  super();\n  this.state = {\n    answerKeys: [],\n    keyOptions: [\"A\", \"B\", \"C\", \"D\", \"E\"],\n    chkbox: false,\n    copyOfAnswerKey: [],\n    makeCopy: true,\n    examList:[],\n    loginName:\"\",\n    email:\"\"\n  };\n  this.handleClick = this.handleClick.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.copyAnswerKey = this.copyAnswerKey.bind(this);\n  this.postAnswerKey = this.postAnswerKey.bind(this);\n}\n\ncomponentDidMount(){\n  //http://localhost:3000/answerkey?examId\n  fetch(`http://pi.cs.oswego.edu:13126/answerkey?examId=${this.props.location.state.id}&instId=${this.props.location.state.email}`)\n  .then(response => response.json())\n  .then(result => {\n    const keys = result.map(item => {\n      return item;\n    })\n    this.setState({\n      answerKeys: keys\n    })\n  });\n}\n\ncopyAnswerKey(){\n  let dupeAnswerKey = JSON.parse(JSON.stringify(this.state.answerKeys));\n  this.setState({\n    makeCopy:false,\n    copyOfAnswerKey:dupeAnswerKey\n  });\n}\n\nhandleClick(item, index){\n  var i = item.answerKey.indexOf(index);\n  if(item.answerKey.includes(index)){\n    item.answerKey.splice(i,1);\n  }else{\n    item.answerKey.push(index);\n}\n}\n\nhandleSubmit(e){\n  this.props.history.push({pathname:\"/home\", state:{loginName:this.props.location.state.loginName, email:this.props.location.state.email,exams:this.props.location.state.exams}});\n  console.log(\"handle on submit here\")\n  console.log(this.state.copyOfAnswerKey);\n  this.postAnswerKey();\n}\n\npostAnswerKey(){\nvar data = JSON.stringify(this.state.answerKeys);\nconsole.log(data);\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = false;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === 4) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", `http://pi.cs.oswego.edu:13126/answerkey?examId=${this.props.location.state.id}`);\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.send(data);\n}\n\n  render(){\n    return (\n      <div>\n        <div>\n        </div>\n      <div align = \"right\">\n          <h1 className = \"answerKeyTitle\" align = \"center\">Answer Key</h1>\n          <h1 className = \"examName\" align = \"center\">{this.props.location.state.text}</h1>\n            <div className = \"items\">\n              {this.state.answerKeys.map( item => (\n                <div align = \"center\" className ={item.answerKey.length !== 0? \"item\": \"itemEmpty\"}>\n                  <div key ={item.questionId}>\n                    <div className=\"keyBox\">\n                      <span className=\"questionId\">\n                        {item.questionId}\n                      </span>\n                        {this.state.keyOptions.map(k =>(\n                          <span>\n                            <input\n                              type=\"checkbox\"\n                              value={item.questionId}\n                              id ={item.questionId+k}\n                              name=\"\"\n                              defaultChecked={item.answerKey.includes(k) ? true : false}\n                              onClick={() => this.handleClick(item, k)}/>\n                              <label htmlFor={item.questionId+k}>{k}</label>\n                            </span>\n                          ))}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n              <button className= \"float\"\n                     onClick={() => this.handleSubmit()}>Submit</button>\n            </div>\n          <Header email={this.props.location.state.email}/>\n\n      </div>\n\n          );\n        }\n}\nexport default AnswerKey\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from './Home';\nimport Results from \"./ResultsPage/Results\";\nimport Login from \"./Login\";\nimport AnswerKey from \"./AnswerKey\";\n\nclass Router extends Component {\n    render() {\n        return (\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <div style={{ height: \"100%\" }}>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path=\"/home\" component={Home} />\n                    <Route exact path=\"/results\" component={Results} />\n                    <Route exact path=\"/answerKey\" component={AnswerKey}/>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default Router;\n","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Router from '../components/Router'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loginName:\"hey\"\n        }\n    }\n\n\n    render() {\n        return (\n            <Router/>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}